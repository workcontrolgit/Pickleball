{"version":3,"file":"default-node_modules_angular_youtube-player_fesm2022_youtube-player_mjs.js","mappings":"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","sources":["./node_modules/rxjs/dist/esm/internal/observable/fromEventPattern.js","./node_modules/@angular/youtube-player/fesm2022/youtube-player.mjs"],"sourcesContent":["import { Observable } from '../Observable';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n    if (resultSelector) {\n        return fromEventPattern(addHandler, removeHandler).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    return new Observable((subscriber) => {\n        const handler = (...e) => subscriber.next(e.length === 1 ? e[0] : e);\n        const retValue = addHandler(handler);\n        return isFunction(removeHandler) ? () => removeHandler(handler, retValue) : undefined;\n    });\n}\n","import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, InjectionToken, numberAttribute, inject, CSP_NONCE, ChangeDetectorRef, PLATFORM_ID, booleanAttribute, Inject, Output, ViewChild, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Subject, BehaviorSubject, fromEventPattern, of, Observable } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\n\nclass YouTubePlayerPlaceholder {\n    /** Gets the background image showing the placeholder. */\n    _getBackgroundImage() {\n        let url;\n        if (this.quality === 'low') {\n            url = `https://i.ytimg.com/vi/${this.videoId}/hqdefault.jpg`;\n        }\n        else if (this.quality === 'high') {\n            url = `https://i.ytimg.com/vi/${this.videoId}/maxresdefault.jpg`;\n        }\n        else {\n            url = `https://i.ytimg.com/vi_webp/${this.videoId}/sddefault.webp`;\n        }\n        return `url(${url})`;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: YouTubePlayerPlaceholder, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", type: YouTubePlayerPlaceholder, isStandalone: true, selector: \"youtube-player-placeholder\", inputs: { videoId: \"videoId\", width: \"width\", height: \"height\", isLoading: \"isLoading\", buttonLabel: \"buttonLabel\", quality: \"quality\" }, host: { properties: { \"class.youtube-player-placeholder-loading\": \"isLoading\", \"style.background-image\": \"_getBackgroundImage()\", \"style.width.px\": \"width\", \"style.height.px\": \"height\" }, classAttribute: \"youtube-player-placeholder\" }, ngImport: i0, template: `\n    <button type=\"button\" class=\"youtube-player-placeholder-button\" [attr.aria-label]=\"buttonLabel\">\n      <svg\n        height=\"100%\"\n        version=\"1.1\"\n        viewBox=\"0 0 68 48\"\n        focusable=\"false\"\n        aria-hidden=\"true\">\n        <path d=\"M66.52,7.74c-0.78-2.93-2.49-5.41-5.42-6.19C55.79,.13,34,0,34,0S12.21,.13,6.9,1.55 C3.97,2.33,2.27,4.81,1.48,7.74C0.06,13.05,0,24,0,24s0.06,10.95,1.48,16.26c0.78,2.93,2.49,5.41,5.42,6.19 C12.21,47.87,34,48,34,48s21.79-0.13,27.1-1.55c2.93-0.78,4.64-3.26,5.42-6.19C67.94,34.95,68,24,68,24S67.94,13.05,66.52,7.74z\" fill=\"#f00\"></path>\n        <path d=\"M 45,24 27,14 27,34\" fill=\"#fff\"></path>\n      </svg>\n    </button>\n  `, isInline: true, styles: [\".youtube-player-placeholder{display:flex;align-items:center;justify-content:center;width:100%;overflow:hidden;cursor:pointer;background-color:#000;background-position:center center;background-size:cover;transition:box-shadow 300ms ease;box-shadow:inset 0 120px 90px -90px rgba(0,0,0,.8)}.youtube-player-placeholder-button{transition:opacity 300ms ease;-moz-appearance:none;-webkit-appearance:none;background:none;border:none;padding:0;display:flex}.youtube-player-placeholder-button svg{width:68px;height:48px}.youtube-player-placeholder-loading{box-shadow:none}.youtube-player-placeholder-loading .youtube-player-placeholder-button{opacity:0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: YouTubePlayerPlaceholder, decorators: [{\n            type: Component,\n            args: [{ selector: 'youtube-player-placeholder', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: `\n    <button type=\"button\" class=\"youtube-player-placeholder-button\" [attr.aria-label]=\"buttonLabel\">\n      <svg\n        height=\"100%\"\n        version=\"1.1\"\n        viewBox=\"0 0 68 48\"\n        focusable=\"false\"\n        aria-hidden=\"true\">\n        <path d=\"M66.52,7.74c-0.78-2.93-2.49-5.41-5.42-6.19C55.79,.13,34,0,34,0S12.21,.13,6.9,1.55 C3.97,2.33,2.27,4.81,1.48,7.74C0.06,13.05,0,24,0,24s0.06,10.95,1.48,16.26c0.78,2.93,2.49,5.41,5.42,6.19 C12.21,47.87,34,48,34,48s21.79-0.13,27.1-1.55c2.93-0.78,4.64-3.26,5.42-6.19C67.94,34.95,68,24,68,24S67.94,13.05,66.52,7.74z\" fill=\"#f00\"></path>\n        <path d=\"M 45,24 27,14 27,34\" fill=\"#fff\"></path>\n      </svg>\n    </button>\n  `, standalone: true, host: {\n                        'class': 'youtube-player-placeholder',\n                        '[class.youtube-player-placeholder-loading]': 'isLoading',\n                        '[style.background-image]': '_getBackgroundImage()',\n                        '[style.width.px]': 'width',\n                        '[style.height.px]': 'height',\n                    }, styles: [\".youtube-player-placeholder{display:flex;align-items:center;justify-content:center;width:100%;overflow:hidden;cursor:pointer;background-color:#000;background-position:center center;background-size:cover;transition:box-shadow 300ms ease;box-shadow:inset 0 120px 90px -90px rgba(0,0,0,.8)}.youtube-player-placeholder-button{transition:opacity 300ms ease;-moz-appearance:none;-webkit-appearance:none;background:none;border:none;padding:0;display:flex}.youtube-player-placeholder-button svg{width:68px;height:48px}.youtube-player-placeholder-loading{box-shadow:none}.youtube-player-placeholder-loading .youtube-player-placeholder-button{opacity:0}\"] }]\n        }], propDecorators: { videoId: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], isLoading: [{\n                type: Input\n            }], buttonLabel: [{\n                type: Input\n            }], quality: [{\n                type: Input\n            }] } });\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/** Injection token used to configure the `YouTubePlayer`. */\nconst YOUTUBE_PLAYER_CONFIG = new InjectionToken('YOUTUBE_PLAYER_CONFIG');\nconst DEFAULT_PLAYER_WIDTH = 640;\nconst DEFAULT_PLAYER_HEIGHT = 390;\n/** Coercion function for time values. */\nfunction coerceTime(value) {\n    return value == null ? value : numberAttribute(value, 0);\n}\n/**\n * Equivalent of `YT.PlayerState` which we can't use, because it's meant to\n * be read off the `window` which we can't do before the API has been loaded.\n */\nvar PlayerState;\n(function (PlayerState) {\n    PlayerState[PlayerState[\"UNSTARTED\"] = -1] = \"UNSTARTED\";\n    PlayerState[PlayerState[\"ENDED\"] = 0] = \"ENDED\";\n    PlayerState[PlayerState[\"PLAYING\"] = 1] = \"PLAYING\";\n    PlayerState[PlayerState[\"PAUSED\"] = 2] = \"PAUSED\";\n    PlayerState[PlayerState[\"BUFFERING\"] = 3] = \"BUFFERING\";\n    PlayerState[PlayerState[\"CUED\"] = 5] = \"CUED\";\n})(PlayerState || (PlayerState = {}));\n/**\n * Angular component that renders a YouTube player via the YouTube player\n * iframe API.\n * @see https://developers.google.com/youtube/iframe_api_reference\n */\nclass YouTubePlayer {\n    /** Height of video player */\n    get height() {\n        return this._height;\n    }\n    set height(height) {\n        this._height = height == null || isNaN(height) ? DEFAULT_PLAYER_HEIGHT : height;\n    }\n    /** Width of video player */\n    get width() {\n        return this._width;\n    }\n    set width(width) {\n        this._width = width == null || isNaN(width) ? DEFAULT_PLAYER_WIDTH : width;\n    }\n    constructor(_ngZone, platformId) {\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._playerChanges = new BehaviorSubject(undefined);\n        this._nonce = inject(CSP_NONCE, { optional: true });\n        this._changeDetectorRef = inject(ChangeDetectorRef);\n        this._isLoading = false;\n        this._hasPlaceholder = true;\n        this._height = DEFAULT_PLAYER_HEIGHT;\n        this._width = DEFAULT_PLAYER_WIDTH;\n        /** Whether cookies inside the player have been disabled. */\n        this.disableCookies = false;\n        /**\n         * By default the player shows a placeholder image instead of loading the YouTube API which\n         * improves the initial page load performance. This input allows for the behavior to be disabled.\n         */\n        this.disablePlaceholder = false;\n        /**\n         * Whether the iframe will attempt to load regardless of the status of the api on the\n         * page. Set this to true if you don't want the `onYouTubeIframeAPIReady` field to be\n         * set on the global window.\n         */\n        this.showBeforeIframeApiLoads = false;\n        /** Outputs are direct proxies from the player itself. */\n        this.ready = this._getLazyEmitter('onReady');\n        this.stateChange = this._getLazyEmitter('onStateChange');\n        this.error = this._getLazyEmitter('onError');\n        this.apiChange = this._getLazyEmitter('onApiChange');\n        this.playbackQualityChange = this._getLazyEmitter('onPlaybackQualityChange');\n        this.playbackRateChange = this._getLazyEmitter('onPlaybackRateChange');\n        const config = inject(YOUTUBE_PLAYER_CONFIG, { optional: true });\n        this.loadApi = config?.loadApi ?? true;\n        this.disablePlaceholder = !!config?.disablePlaceholder;\n        this.placeholderButtonLabel = config?.placeholderButtonLabel || 'Play video';\n        this.placeholderImageQuality = config?.placeholderImageQuality || 'standard';\n        this._isBrowser = isPlatformBrowser(platformId);\n    }\n    ngAfterViewInit() {\n        this._conditionallyLoad();\n    }\n    ngOnChanges(changes) {\n        if (this._shouldRecreatePlayer(changes)) {\n            this._conditionallyLoad();\n        }\n        else if (this._player) {\n            if (changes['width'] || changes['height']) {\n                this._setSize();\n            }\n            if (changes['suggestedQuality']) {\n                this._setQuality();\n            }\n            if (changes['startSeconds'] || changes['endSeconds'] || changes['suggestedQuality']) {\n                this._cuePlayer();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._pendingPlayer?.destroy();\n        if (this._player) {\n            this._player.destroy();\n            window.onYouTubeIframeAPIReady = this._existingApiReadyCallback;\n        }\n        this._playerChanges.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#playVideo */\n    playVideo() {\n        if (this._player) {\n            this._player.playVideo();\n        }\n        else {\n            this._getPendingState().playbackState = PlayerState.PLAYING;\n            this._load(true);\n        }\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#pauseVideo */\n    pauseVideo() {\n        if (this._player) {\n            this._player.pauseVideo();\n        }\n        else {\n            this._getPendingState().playbackState = PlayerState.PAUSED;\n        }\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#stopVideo */\n    stopVideo() {\n        if (this._player) {\n            this._player.stopVideo();\n        }\n        else {\n            // It seems like YouTube sets the player to CUED when it's stopped.\n            this._getPendingState().playbackState = PlayerState.CUED;\n        }\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#seekTo */\n    seekTo(seconds, allowSeekAhead) {\n        if (this._player) {\n            this._player.seekTo(seconds, allowSeekAhead);\n        }\n        else {\n            this._getPendingState().seek = { seconds, allowSeekAhead };\n        }\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#mute */\n    mute() {\n        if (this._player) {\n            this._player.mute();\n        }\n        else {\n            this._getPendingState().muted = true;\n        }\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#unMute */\n    unMute() {\n        if (this._player) {\n            this._player.unMute();\n        }\n        else {\n            this._getPendingState().muted = false;\n        }\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#isMuted */\n    isMuted() {\n        if (this._player) {\n            return this._player.isMuted();\n        }\n        if (this._pendingPlayerState) {\n            return !!this._pendingPlayerState.muted;\n        }\n        return false;\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#setVolume */\n    setVolume(volume) {\n        if (this._player) {\n            this._player.setVolume(volume);\n        }\n        else {\n            this._getPendingState().volume = volume;\n        }\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getVolume */\n    getVolume() {\n        if (this._player) {\n            return this._player.getVolume();\n        }\n        if (this._pendingPlayerState && this._pendingPlayerState.volume != null) {\n            return this._pendingPlayerState.volume;\n        }\n        return 0;\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate */\n    setPlaybackRate(playbackRate) {\n        if (this._player) {\n            return this._player.setPlaybackRate(playbackRate);\n        }\n        else {\n            this._getPendingState().playbackRate = playbackRate;\n        }\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getPlaybackRate */\n    getPlaybackRate() {\n        if (this._player) {\n            return this._player.getPlaybackRate();\n        }\n        if (this._pendingPlayerState && this._pendingPlayerState.playbackRate != null) {\n            return this._pendingPlayerState.playbackRate;\n        }\n        return 0;\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getAvailablePlaybackRates */\n    getAvailablePlaybackRates() {\n        return this._player ? this._player.getAvailablePlaybackRates() : [];\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getVideoLoadedFraction */\n    getVideoLoadedFraction() {\n        return this._player ? this._player.getVideoLoadedFraction() : 0;\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getPlayerState */\n    getPlayerState() {\n        if (!this._isBrowser || !window.YT) {\n            return undefined;\n        }\n        if (this._player) {\n            return this._player.getPlayerState();\n        }\n        if (this._pendingPlayerState && this._pendingPlayerState.playbackState != null) {\n            return this._pendingPlayerState.playbackState;\n        }\n        return PlayerState.UNSTARTED;\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getCurrentTime */\n    getCurrentTime() {\n        if (this._player) {\n            return this._player.getCurrentTime();\n        }\n        if (this._pendingPlayerState && this._pendingPlayerState.seek) {\n            return this._pendingPlayerState.seek.seconds;\n        }\n        return 0;\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getPlaybackQuality */\n    getPlaybackQuality() {\n        return this._player ? this._player.getPlaybackQuality() : 'default';\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getAvailableQualityLevels */\n    getAvailableQualityLevels() {\n        return this._player ? this._player.getAvailableQualityLevels() : [];\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getDuration */\n    getDuration() {\n        return this._player ? this._player.getDuration() : 0;\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getVideoUrl */\n    getVideoUrl() {\n        return this._player ? this._player.getVideoUrl() : '';\n    }\n    /** See https://developers.google.com/youtube/iframe_api_reference#getVideoEmbedCode */\n    getVideoEmbedCode() {\n        return this._player ? this._player.getVideoEmbedCode() : '';\n    }\n    /**\n     * Loads the YouTube API and sets up the player.\n     * @param playVideo Whether to automatically play the video once the player is loaded.\n     */\n    _load(playVideo) {\n        // Don't do anything if we're not in a browser environment.\n        if (!this._isBrowser) {\n            return;\n        }\n        if (!window.YT || !window.YT.Player) {\n            if (this.loadApi) {\n                this._isLoading = true;\n                loadApi(this._nonce);\n            }\n            else if (this.showBeforeIframeApiLoads && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw new Error('Namespace YT not found, cannot construct embedded youtube player. ' +\n                    'Please install the YouTube Player API Reference for iframe Embeds: ' +\n                    'https://developers.google.com/youtube/iframe_api_reference');\n            }\n            this._existingApiReadyCallback = window.onYouTubeIframeAPIReady;\n            window.onYouTubeIframeAPIReady = () => {\n                this._existingApiReadyCallback?.();\n                this._ngZone.run(() => this._createPlayer(playVideo));\n            };\n        }\n        else {\n            this._createPlayer(playVideo);\n        }\n    }\n    /** Loads the player depending on the internal state of the component. */\n    _conditionallyLoad() {\n        // If the placeholder isn't shown anymore, we have to trigger a load.\n        if (!this._shouldShowPlaceholder()) {\n            this._load(false);\n        }\n        else if (this.playerVars?.autoplay === 1) {\n            // If it's an autoplaying video, we have to hide the placeholder and start playing.\n            this._load(true);\n        }\n    }\n    /** Whether to show the placeholder element. */\n    _shouldShowPlaceholder() {\n        if (this.disablePlaceholder) {\n            return false;\n        }\n        // Since we don't load the API on the server, we show the placeholder permanently.\n        if (!this._isBrowser) {\n            return true;\n        }\n        return this._hasPlaceholder && !!this.videoId && !this._player;\n    }\n    /** Gets an object that should be used to store the temporary API state. */\n    _getPendingState() {\n        if (!this._pendingPlayerState) {\n            this._pendingPlayerState = {};\n        }\n        return this._pendingPlayerState;\n    }\n    /**\n     * Determines whether a change in the component state\n     * requires the YouTube player to be recreated.\n     */\n    _shouldRecreatePlayer(changes) {\n        const change = changes['videoId'] ||\n            changes['playerVars'] ||\n            changes['disableCookies'] ||\n            changes['disablePlaceholder'];\n        return !!change && !change.isFirstChange();\n    }\n    /**\n     * Creates a new YouTube player and destroys the existing one.\n     * @param playVideo Whether to play the video once it loads.\n     */\n    _createPlayer(playVideo) {\n        this._player?.destroy();\n        this._pendingPlayer?.destroy();\n        // A player can't be created if the API isn't loaded,\n        // or there isn't a video or playlist to be played.\n        if (typeof YT === 'undefined' || (!this.videoId && !this.playerVars?.list)) {\n            return;\n        }\n        // Important! We need to create the Player object outside of the `NgZone`, because it kicks\n        // off a 250ms setInterval which will continually trigger change detection if we don't.\n        const player = this._ngZone.runOutsideAngular(() => new YT.Player(this.youtubeContainer.nativeElement, {\n            videoId: this.videoId,\n            host: this.disableCookies ? 'https://www.youtube-nocookie.com' : undefined,\n            width: this.width,\n            height: this.height,\n            // Calling `playVideo` on load doesn't appear to actually play\n            // the video so we need to trigger it through `playerVars` instead.\n            playerVars: playVideo ? { ...(this.playerVars || {}), autoplay: 1 } : this.playerVars,\n        }));\n        const whenReady = () => {\n            // Only assign the player once it's ready, otherwise YouTube doesn't expose some APIs.\n            this._ngZone.run(() => {\n                this._isLoading = false;\n                this._hasPlaceholder = false;\n                this._player = player;\n                this._pendingPlayer = undefined;\n                player.removeEventListener('onReady', whenReady);\n                this._playerChanges.next(player);\n                this._setSize();\n                this._setQuality();\n                if (this._pendingPlayerState) {\n                    this._applyPendingPlayerState(player, this._pendingPlayerState);\n                    this._pendingPlayerState = undefined;\n                }\n                // Only cue the player when it either hasn't started yet or it's cued,\n                // otherwise cuing it can interrupt a player with autoplay enabled.\n                const state = player.getPlayerState();\n                if (state === PlayerState.UNSTARTED || state === PlayerState.CUED || state == null) {\n                    this._cuePlayer();\n                }\n                this._changeDetectorRef.markForCheck();\n            });\n        };\n        this._pendingPlayer = player;\n        player.addEventListener('onReady', whenReady);\n    }\n    /** Applies any state that changed before the player was initialized. */\n    _applyPendingPlayerState(player, pendingState) {\n        const { playbackState, playbackRate, volume, muted, seek } = pendingState;\n        switch (playbackState) {\n            case PlayerState.PLAYING:\n                player.playVideo();\n                break;\n            case PlayerState.PAUSED:\n                player.pauseVideo();\n                break;\n            case PlayerState.CUED:\n                player.stopVideo();\n                break;\n        }\n        if (playbackRate != null) {\n            player.setPlaybackRate(playbackRate);\n        }\n        if (volume != null) {\n            player.setVolume(volume);\n        }\n        if (muted != null) {\n            muted ? player.mute() : player.unMute();\n        }\n        if (seek != null) {\n            player.seekTo(seek.seconds, seek.allowSeekAhead);\n        }\n    }\n    /** Cues the player based on the current component state. */\n    _cuePlayer() {\n        if (this._player && this.videoId) {\n            this._player.cueVideoById({\n                videoId: this.videoId,\n                startSeconds: this.startSeconds,\n                endSeconds: this.endSeconds,\n                suggestedQuality: this.suggestedQuality,\n            });\n        }\n    }\n    /** Sets the player's size based on the current input values. */\n    _setSize() {\n        this._player?.setSize(this.width, this.height);\n    }\n    /** Sets the player's quality based on the current input values. */\n    _setQuality() {\n        if (this._player && this.suggestedQuality) {\n            this._player.setPlaybackQuality(this.suggestedQuality);\n        }\n    }\n    /** Gets an observable that adds an event listener to the player when a user subscribes to it. */\n    _getLazyEmitter(name) {\n        // Start with the stream of players. This way the events will be transferred\n        // over to the new player if it gets swapped out under-the-hood.\n        return this._playerChanges.pipe(\n        // Switch to the bound event. `switchMap` ensures that the old event is removed when the\n        // player is changed. If there's no player, return an observable that never emits.\n        switchMap(player => {\n            return player\n                ? fromEventPattern((listener) => {\n                    player.addEventListener(name, listener);\n                }, (listener) => {\n                    // The API seems to throw when we try to unbind from a destroyed player and it doesn't\n                    // expose whether the player has been destroyed so we have to wrap it in a try/catch to\n                    // prevent the entire stream from erroring out.\n                    try {\n                        player?.removeEventListener?.(name, listener);\n                    }\n                    catch { }\n                })\n                : of();\n        }), \n        // By default we run all the API interactions outside the zone\n        // so we have to bring the events back in manually when they emit.\n        source => new Observable(observer => source.subscribe({\n            next: value => this._ngZone.run(() => observer.next(value)),\n            error: error => observer.error(error),\n            complete: () => observer.complete(),\n        })), \n        // Ensures that everything is cleared out on destroy.\n        takeUntil(this._destroyed));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: YouTubePlayer, deps: [{ token: i0.NgZone }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"18.2.0-next.2\", type: YouTubePlayer, isStandalone: true, selector: \"youtube-player\", inputs: { videoId: \"videoId\", height: [\"height\", \"height\", numberAttribute], width: [\"width\", \"width\", numberAttribute], startSeconds: [\"startSeconds\", \"startSeconds\", coerceTime], endSeconds: [\"endSeconds\", \"endSeconds\", coerceTime], suggestedQuality: \"suggestedQuality\", playerVars: \"playerVars\", disableCookies: [\"disableCookies\", \"disableCookies\", booleanAttribute], loadApi: [\"loadApi\", \"loadApi\", booleanAttribute], disablePlaceholder: [\"disablePlaceholder\", \"disablePlaceholder\", booleanAttribute], showBeforeIframeApiLoads: [\"showBeforeIframeApiLoads\", \"showBeforeIframeApiLoads\", booleanAttribute], placeholderButtonLabel: \"placeholderButtonLabel\", placeholderImageQuality: \"placeholderImageQuality\" }, outputs: { ready: \"ready\", stateChange: \"stateChange\", error: \"error\", apiChange: \"apiChange\", playbackQualityChange: \"playbackQualityChange\", playbackRateChange: \"playbackRateChange\" }, viewQueries: [{ propertyName: \"youtubeContainer\", first: true, predicate: [\"youtubeContainer\"], descendants: true, static: true }], usesOnChanges: true, ngImport: i0, template: `\n    @if (_shouldShowPlaceholder()) {\n      <youtube-player-placeholder\n        [videoId]=\"videoId!\"\n        [width]=\"width\"\n        [height]=\"height\"\n        [isLoading]=\"_isLoading\"\n        [buttonLabel]=\"placeholderButtonLabel\"\n        [quality]=\"placeholderImageQuality\"\n        (click)=\"_load(true)\"/>\n    }\n    <div [style.display]=\"_shouldShowPlaceholder() ? 'none' : ''\">\n      <div #youtubeContainer></div>\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"component\", type: YouTubePlayerPlaceholder, selector: \"youtube-player-placeholder\", inputs: [\"videoId\", \"width\", \"height\", \"isLoading\", \"buttonLabel\", \"quality\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: YouTubePlayer, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'youtube-player',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    standalone: true,\n                    imports: [YouTubePlayerPlaceholder],\n                    template: `\n    @if (_shouldShowPlaceholder()) {\n      <youtube-player-placeholder\n        [videoId]=\"videoId!\"\n        [width]=\"width\"\n        [height]=\"height\"\n        [isLoading]=\"_isLoading\"\n        [buttonLabel]=\"placeholderButtonLabel\"\n        [quality]=\"placeholderImageQuality\"\n        (click)=\"_load(true)\"/>\n    }\n    <div [style.display]=\"_shouldShowPlaceholder() ? 'none' : ''\">\n      <div #youtubeContainer></div>\n    </div>\n  `,\n                }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }], propDecorators: { videoId: [{\n                type: Input\n            }], height: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], width: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], startSeconds: [{\n                type: Input,\n                args: [{ transform: coerceTime }]\n            }], endSeconds: [{\n                type: Input,\n                args: [{ transform: coerceTime }]\n            }], suggestedQuality: [{\n                type: Input\n            }], playerVars: [{\n                type: Input\n            }], disableCookies: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], loadApi: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disablePlaceholder: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], showBeforeIframeApiLoads: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], placeholderButtonLabel: [{\n                type: Input\n            }], placeholderImageQuality: [{\n                type: Input\n            }], ready: [{\n                type: Output\n            }], stateChange: [{\n                type: Output\n            }], error: [{\n                type: Output\n            }], apiChange: [{\n                type: Output\n            }], playbackQualityChange: [{\n                type: Output\n            }], playbackRateChange: [{\n                type: Output\n            }], youtubeContainer: [{\n                type: ViewChild,\n                args: ['youtubeContainer', { static: true }]\n            }] } });\nlet apiLoaded = false;\n/** Loads the YouTube API from a specified URL only once. */\nfunction loadApi(nonce) {\n    if (apiLoaded) {\n        return;\n    }\n    // We can use `document` directly here, because this logic doesn't run outside the browser.\n    const url = 'https://www.youtube.com/iframe_api';\n    const script = document.createElement('script');\n    const callback = (event) => {\n        script.removeEventListener('load', callback);\n        script.removeEventListener('error', callback);\n        if (event.type === 'error') {\n            apiLoaded = false;\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                console.error(`Failed to load YouTube API from ${url}`);\n            }\n        }\n    };\n    script.addEventListener('load', callback);\n    script.addEventListener('error', callback);\n    script.src = url;\n    script.async = true;\n    if (nonce) {\n        script.setAttribute('nonce', nonce);\n    }\n    // Set this immediately to true so we don't start loading another script\n    // while this one is pending. If loading fails, we'll flip it back to false.\n    apiLoaded = true;\n    document.body.appendChild(script);\n}\n\nclass YouTubePlayerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: YouTubePlayerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: YouTubePlayerModule, imports: [YouTubePlayer], exports: [YouTubePlayer] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: YouTubePlayerModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"18.2.0-next.2\", ngImport: i0, type: YouTubePlayerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [YouTubePlayer],\n                    exports: [YouTubePlayer],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { YOUTUBE_PLAYER_CONFIG, YouTubePlayer, YouTubePlayerModule };\n"],"names":["Observable","isFunction","mapOneOrManyArgs","fromEventPattern","addHandler","removeHandler","resultSelector","pipe","subscriber","handler","e","next","length","retValue","undefined","i0","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","InjectionToken","numberAttribute","inject","CSP_NONCE","ChangeDetectorRef","PLATFORM_ID","booleanAttribute","Inject","Output","ViewChild","NgModule","isPlatformBrowser","Subject","BehaviorSubject","of","switchMap","takeUntil","_c0","YouTubePlayer_Conditional_0_Template","rf","ctx","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","YouTubePlayer_Conditional_0_Template_youtube_player_placeholder_click_0_listener","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","_load","ɵɵelementEnd","ɵɵproperty","videoId","width","height","_isLoading","placeholderButtonLabel","placeholderImageQuality","YouTubePlayerPlaceholder","_getBackgroundImage","url","quality","_","ɵfac","YouTubePlayerPlaceholder_Factory","__ngFactoryType__","_2","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","YouTubePlayerPlaceholder_HostBindings","ɵɵstyleProp","ɵɵclassProp","isLoading","inputs","buttonLabel","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","YouTubePlayerPlaceholder_Template","ɵɵnamespaceSVG","ɵɵelement","ɵɵattribute","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","OnPush","None","host","YOUTUBE_PLAYER_CONFIG","DEFAULT_PLAYER_WIDTH","DEFAULT_PLAYER_HEIGHT","coerceTime","value","PlayerState","YouTubePlayer","_height","isNaN","_width","constructor","_ngZone","platformId","_destroyed","_playerChanges","_nonce","optional","_changeDetectorRef","_hasPlaceholder","disableCookies","disablePlaceholder","showBeforeIframeApiLoads","ready","_getLazyEmitter","stateChange","error","apiChange","playbackQualityChange","playbackRateChange","config","loadApi","_isBrowser","ngAfterViewInit","_conditionallyLoad","ngOnChanges","changes","_shouldRecreatePlayer","_player","_setSize","_setQuality","_cuePlayer","ngOnDestroy","_pendingPlayer","destroy","window","onYouTubeIframeAPIReady","_existingApiReadyCallback","complete","playVideo","_getPendingState","playbackState","PLAYING","pauseVideo","PAUSED","stopVideo","CUED","seekTo","seconds","allowSeekAhead","seek","mute","muted","unMute","isMuted","_pendingPlayerState","setVolume","volume","getVolume","setPlaybackRate","playbackRate","getPlaybackRate","getAvailablePlaybackRates","getVideoLoadedFraction","getPlayerState","YT","UNSTARTED","getCurrentTime","getPlaybackQuality","getAvailableQualityLevels","getDuration","getVideoUrl","getVideoEmbedCode","Player","Error","run","_createPlayer","_shouldShowPlaceholder","playerVars","autoplay","change","isFirstChange","list","player","runOutsideAngular","youtubeContainer","nativeElement","whenReady","removeEventListener","_applyPendingPlayerState","state","markForCheck","addEventListener","pendingState","cueVideoById","startSeconds","endSeconds","suggestedQuality","setSize","setPlaybackQuality","name","listener","source","observer","subscribe","YouTubePlayer_Factory","ɵɵdirectiveInject","NgZone","viewQuery","YouTubePlayer_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","outputs","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","YouTubePlayer_Template","ɵɵtemplate","ɵɵconditional","ɵɵadvance","dependencies","imports","Object","decorators","transform","static","apiLoaded","nonce","script","document","createElement","callback","event","console","src","async","setAttribute","body","appendChild","YouTubePlayerModule","YouTubePlayerModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}